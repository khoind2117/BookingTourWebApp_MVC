@using BookingTourWebApp_MVC.ViewModels;
@using Microsoft.AspNetCore.Identity;
@model LoginViewModel
@inject SignInManager<AppUser> signInManager

<h1>Đăng nhập</h1>
<form asp-controller="Account" asp-action="Login" asp-route-returnurl="@Model.ReturnUrl" method="post" role="form">
    <hr />
    <div asp-validation-summary="All" class="text-danger"></div>
    <div class="form-group mb-3">
        <label asp-for="UserName">Tên đăng nhập</label>
        <input asp-for="UserName" class="form-control">
        <span asp-validation-for="UserName" class="text-danger"></span>
    </div>
    <div class="form-group mb-3">
        <label asp-for="Password">Mật khẩu</label>
        <input asp-for="Password" class="form-control">
        <span asp-validation-for="Password" class="text-danger"></span>
    </div>
    <div class="form-group">
        <div class="col-md-2">
            <button type="submit" class="btn btn-primary form-control">Đăng nhập</button>
        </div>
    </div>
    <p>
        <a asp-action="Register">Tạo tài khoản mới</a>
    </p>
</form>
<hr />
@{
    var schemes = await signInManager.GetExternalAuthenticationSchemesAsync();
    var loginProviders = schemes.ToList();
}
@if (loginProviders.Count() > 0)
{
    <div class="col-md-4">
        <section>
            <h4>Đăng nhập với</h4>
            <form asp-controller="Account" asp-action="ExternalLogin" asp-route-returnUrl="@Model.ReturnUrl" method="post" role="form">
                <div>
                    <p>
                        @foreach (var provider in loginProviders)
                        {
                            <button type="submit" class="btn btn-primary"
                                    name="provider" value="@provider.Name"
                                    title="Log in using your @provider.Name account">
                                @provider.Name
                            </button>

                        }
                    </p>
                </div>
            </form>
        </section>
    </div>
}